---
- hosts: mi_computadora
  connection: local
  tasks:
  - name : Creo un juego de llaves
    ec2_key:
      name: "{{ alumno }}"
    register: key
  - name: Cree la llave o ya existia?
    debug:
      msg: "{{ key.msg }}"
  - name: Guardo la llave en certificado.pem
    copy:
      dest: "certificado.pem"
      mode: "0700"
      content: "{{ key.key.private_key }}"
    ignore_errors: yes
  - name: Buscar cual es la vpc por default
    ec2_vpc_net_info:
      filters:
         is-default: "true"
    register: vpc
  - name: Buscar cual es la subnet por default
    ec2_vpc_subnet_info:
      filters:
         default-for-az: "true"
    register: subnet
  - name: Crear grupo de seguridad con HTTPS, HTTP y SSH
    ec2_group:
      name: "{{ alumno }}"
      vpc_id: "{{ vpc.vpcs[0].vpc_id }}"
      description: sg con las reglas
      region: us-east-1
      rules:
        - proto: tcp
          ports:
          - 443
          - 80
          - 22
          - 8080
          cidr_ip: 0.0.0.0/0
          rule_desc: Acepto todo el trafico
  - name: Creamos nuestro servidor
    ec2_instance:
      name: "{{ alumno }}"
      region: us-east-1
      image_id: ami-0c2b8ca1dad447f8a
      security_group: "{{ alumno }}"
      vpc_subnet_id: "{{ subnet.subnets[0].subnet_id }}"
      instance_type: t2.micro
      volumes:
      - device_name: /dev/xvda
        ebs:
          delete_on_termination: true
          volume_type: gp2
          volume_size: 8
      network:
        assign_public_ip: true
      key_name: "{{ key.key.name }}"
      state: running
    register: info
  - name: DNS Publico de nuestro servidor
    debug:
      msg: "La ip publica es {{ info.instances[0].network_interfaces[0].association.public_ip }} y su DNS es {{ info.instances[0].network_interfaces[0].association.public_dns_name }}"
